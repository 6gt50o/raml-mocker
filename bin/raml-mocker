#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const http = require('http');
const chokidar = require('chokidar');
const mocker = require('..');

const config = JSON.parse(fs.readFileSync('./.raml-config.json', 'utf8'));
config.raml = path.resolve(config.raml);
config.controller = path.resolve(config.controller);
if (Array.isArray(config.plugins)) {
  config.plugins = config.plugins.map(plugin => path.resolve(plugin));
}

mocker.setConfig(config);

const port = config.port || 3000;
const server = http.createServer(mocker.app);
const startServer = () => {
  server.listen(port, () => console.log(`raml mock server http://localhost:${port}!`));
};
const restartServer = () => {
  server.close(() => {
    mocker.setConfig(config);
    startServer();
  });
};

startServer();

const watcher = chokidar.watch([config.raml, config.controller]);
watcher
  .on('change', restartServer)
  .on('unlinkDir', restartServer)
  .on('unlink', restartServer);
